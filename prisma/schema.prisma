// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// datasource db {
//   provider  = "postgresql"
//   url       = env("POSTGRES_PRISMA_URL")
//   directUrl = env("POSTGRES_URL_NON_POOLING")
// }

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  email String @unique
  hash  String

  firstName String?
  lastName  String?

  bookmarks    Bookmark[]
  Subscription Subscription[]

  @@map("users")
}

model Bookmark {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  title       String
  description String?
  link        String

  userId Int
  user   User @relation(fields: [userId], references: [id])

  @@map("bookmarks")
}

model Subscription {
  id            Int      @id @default(autoincrement())
  createdAt     DateTime @default(now())
  expiresAt     DateTime
  status        String
  paymentStatus String
  author        User     @relation(fields: [userId], references: [id])
  userId        Int
  Channel       Channel? @relation(fields: [channelId], references: [id])
  channelId     Int?

  @@map("subscriptions")
}

model Channel {
  id          Int     @id @default(autoincrement())
  name        String
  description String?
  category    String
  isActive    Boolean @default(true)

  subscriptions Subscription[]

  @@map("channels")
}
